
MOTOR2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  000009ba  00000a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  00000a68  2**0
                  ALLOC
  3 .stab         00001bcc  00000000  00000000  00000a68  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000583  00000000  00000000  00002634  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000e0  00000000  00000000  00002bb8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000baf  00000000  00000000  00002c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000046f  00000000  00000000  00003847  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000528  00000000  00000000  00003cb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  000041e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002cf  00000000  00000000  000042f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000066b  00000000  00000000  000045bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea eb       	ldi	r30, 0xBA	; 186
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 37       	cpi	r26, 0x7A	; 122
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	aa e7       	ldi	r26, 0x7A	; 122
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 37       	cpi	r26, 0x7C	; 124
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 41 01 	call	0x282	; 0x282 <main>
  8a:	0c 94 db 04 	jmp	0x9b6	; 0x9b6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_init>:
*Description: This function can set the direction of a full port, a nibble
* 			  or even one pin.
*/

ERROR_STATUS DIO_init (DIO_Cfg_s *DIO_info)
{	uint8_t RET=0;
  92:	fc 01       	movw	r30, r24
		switch(DIO_info->dir)
  94:	82 81       	ldd	r24, Z+2	; 0x02
  96:	88 23       	and	r24, r24
  98:	21 f0       	breq	.+8      	; 0xa2 <DIO_init+0x10>
  9a:	8f 3f       	cpi	r24, 0xFF	; 255
  9c:	09 f0       	breq	.+2      	; 0xa0 <DIO_init+0xe>
  9e:	4a c0       	rjmp	.+148    	; 0x134 <DIO_init+0xa2>
  a0:	27 c0       	rjmp	.+78     	; 0xf0 <DIO_init+0x5e>
			{	
		case INPUT:
		     	switch(DIO_info ->GPIO)
  a2:	80 81       	ld	r24, Z
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	79 f0       	breq	.+30     	; 0xc6 <DIO_init+0x34>
  a8:	81 30       	cpi	r24, 0x01	; 1
  aa:	30 f0       	brcs	.+12     	; 0xb8 <DIO_init+0x26>
  ac:	82 30       	cpi	r24, 0x02	; 2
  ae:	91 f0       	breq	.+36     	; 0xd4 <DIO_init+0x42>
  b0:	83 30       	cpi	r24, 0x03	; 3
  b2:	09 f0       	breq	.+2      	; 0xb6 <DIO_init+0x24>
  b4:	41 c0       	rjmp	.+130    	; 0x138 <DIO_init+0xa6>
  b6:	15 c0       	rjmp	.+42     	; 0xe2 <DIO_init+0x50>
		 		{
					case GPIOA:
						PORTA_DIR &=(~(DIO_info->pins))	;
  b8:	9a b3       	in	r25, 0x1a	; 26
  ba:	81 81       	ldd	r24, Z+1	; 0x01
  bc:	80 95       	com	r24
  be:	89 23       	and	r24, r25
  c0:	8a bb       	out	0x1a, r24	; 26
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
					break;
					RET=E_OK;
				}
				RET=E_OK;
  c2:	80 e0       	ldi	r24, 0x00	; 0
		case INPUT:
		     	switch(DIO_info ->GPIO)
		 		{
					case GPIOA:
						PORTA_DIR &=(~(DIO_info->pins))	;
					break;
  c4:	08 95       	ret
					case GPIOB:
					PORTB_DIR &=(~(DIO_info->pins))	;
  c6:	97 b3       	in	r25, 0x17	; 23
  c8:	81 81       	ldd	r24, Z+1	; 0x01
  ca:	80 95       	com	r24
  cc:	89 23       	and	r24, r25
  ce:	87 bb       	out	0x17, r24	; 23
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
					break;
					RET=E_OK;
				}
				RET=E_OK;
  d0:	80 e0       	ldi	r24, 0x00	; 0
					case GPIOA:
						PORTA_DIR &=(~(DIO_info->pins))	;
					break;
					case GPIOB:
					PORTB_DIR &=(~(DIO_info->pins))	;
					break;
  d2:	08 95       	ret
					case GPIOC:
					PORTC_DIR &=(~(DIO_info->pins))	;
  d4:	94 b3       	in	r25, 0x14	; 20
  d6:	81 81       	ldd	r24, Z+1	; 0x01
  d8:	80 95       	com	r24
  da:	89 23       	and	r24, r25
  dc:	84 bb       	out	0x14, r24	; 20
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
					break;
					RET=E_OK;
				}
				RET=E_OK;
  de:	80 e0       	ldi	r24, 0x00	; 0
					case GPIOB:
					PORTB_DIR &=(~(DIO_info->pins))	;
					break;
					case GPIOC:
					PORTC_DIR &=(~(DIO_info->pins))	;
					break;
  e0:	08 95       	ret
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
  e2:	91 b3       	in	r25, 0x11	; 17
  e4:	81 81       	ldd	r24, Z+1	; 0x01
  e6:	80 95       	com	r24
  e8:	89 23       	and	r24, r25
  ea:	81 bb       	out	0x11, r24	; 17
					break;
					RET=E_OK;
				}
				RET=E_OK;
  ec:	80 e0       	ldi	r24, 0x00	; 0
					case GPIOC:
					PORTC_DIR &=(~(DIO_info->pins))	;
					break;
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
					break;
  ee:	08 95       	ret
				}
				RET=E_OK;
				break;

		case OUTPUT:
			  switch(DIO_info ->GPIO)
  f0:	80 81       	ld	r24, Z
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	69 f0       	breq	.+26     	; 0x110 <DIO_init+0x7e>
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	28 f0       	brcs	.+10     	; 0x104 <DIO_init+0x72>
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	79 f0       	breq	.+30     	; 0x11c <DIO_init+0x8a>
  fe:	83 30       	cpi	r24, 0x03	; 3
 100:	e9 f4       	brne	.+58     	; 0x13c <DIO_init+0xaa>
 102:	12 c0       	rjmp	.+36     	; 0x128 <DIO_init+0x96>
			  {
				  case GPIOA:
				  PORTA_DIR |=(DIO_info->pins)	;
 104:	9a b3       	in	r25, 0x1a	; 26
 106:	81 81       	ldd	r24, Z+1	; 0x01
 108:	89 2b       	or	r24, r25
 10a:	8a bb       	out	0x1a, r24	; 26
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
				  break;
				  RET=E_OK;
			  }
			  RET=E_OK;
 10c:	80 e0       	ldi	r24, 0x00	; 0
		case OUTPUT:
			  switch(DIO_info ->GPIO)
			  {
				  case GPIOA:
				  PORTA_DIR |=(DIO_info->pins)	;
				  break;
 10e:	08 95       	ret
				  case GPIOB:
				  PORTB_DIR |=(DIO_info->pins)	;
 110:	97 b3       	in	r25, 0x17	; 23
 112:	81 81       	ldd	r24, Z+1	; 0x01
 114:	89 2b       	or	r24, r25
 116:	87 bb       	out	0x17, r24	; 23
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
				  break;
				  RET=E_OK;
			  }
			  RET=E_OK;
 118:	80 e0       	ldi	r24, 0x00	; 0
				  case GPIOA:
				  PORTA_DIR |=(DIO_info->pins)	;
				  break;
				  case GPIOB:
				  PORTB_DIR |=(DIO_info->pins)	;
				  break;
 11a:	08 95       	ret
				  case GPIOC:
				  PORTC_DIR |=(DIO_info->pins)	;
 11c:	94 b3       	in	r25, 0x14	; 20
 11e:	81 81       	ldd	r24, Z+1	; 0x01
 120:	89 2b       	or	r24, r25
 122:	84 bb       	out	0x14, r24	; 20
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
				  break;
				  RET=E_OK;
			  }
			  RET=E_OK;
 124:	80 e0       	ldi	r24, 0x00	; 0
				  case GPIOB:
				  PORTB_DIR |=(DIO_info->pins)	;
				  break;
				  case GPIOC:
				  PORTC_DIR |=(DIO_info->pins)	;
				  break;
 126:	08 95       	ret
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
 128:	91 b3       	in	r25, 0x11	; 17
 12a:	81 81       	ldd	r24, Z+1	; 0x01
 12c:	89 2b       	or	r24, r25
 12e:	81 bb       	out	0x11, r24	; 17
				  break;
				  RET=E_OK;
			  }
			  RET=E_OK;
 130:	80 e0       	ldi	r24, 0x00	; 0
				  case GPIOC:
				  PORTC_DIR |=(DIO_info->pins)	;
				  break;
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
				  break;
 132:	08 95       	ret
			  }
			  RET=E_OK;
			  break;

			default:
			RET=E_NOK;
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	08 95       	ret
					case GPIOD:
					PORTD_DIR &=(~(DIO_info->pins))	;
					break;
					RET=E_OK;
				}
				RET=E_OK;
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	08 95       	ret
				  case GPIOD:
				  PORTD_DIR |=(DIO_info->pins)	;
				  break;
				  RET=E_OK;
			  }
			  RET=E_OK;
 13c:	80 e0       	ldi	r24, 0x00	; 0

			default:
			RET=E_NOK;
	}
return RET;
}
 13e:	08 95       	ret

00000140 <DIO_Write>:

ERROR_STATUS DIO_Write (uint8_t GPIO, uint8_t pins, uint8_t value)
{uint8_t Ret=0;
switch(value){
 140:	44 23       	and	r20, r20
 142:	21 f0       	breq	.+8      	; 0x14c <DIO_Write+0xc>
 144:	4f 3f       	cpi	r20, 0xFF	; 255
 146:	09 f0       	breq	.+2      	; 0x14a <DIO_Write+0xa>
 148:	3f c0       	rjmp	.+126    	; 0x1c8 <DIO_Write+0x88>
 14a:	21 c0       	rjmp	.+66     	; 0x18e <DIO_Write+0x4e>
case LOW:
{
switch (GPIO)
 14c:	81 30       	cpi	r24, 0x01	; 1
 14e:	69 f0       	breq	.+26     	; 0x16a <DIO_Write+0x2a>
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	28 f0       	brcs	.+10     	; 0x15e <DIO_Write+0x1e>
 154:	82 30       	cpi	r24, 0x02	; 2
 156:	79 f0       	breq	.+30     	; 0x176 <DIO_Write+0x36>
 158:	83 30       	cpi	r24, 0x03	; 3
 15a:	c1 f5       	brne	.+112    	; 0x1cc <DIO_Write+0x8c>
 15c:	12 c0       	rjmp	.+36     	; 0x182 <DIO_Write+0x42>
{	case GPIOA:
	PORTA_DATA &= ~(pins);   // 0b01111111
 15e:	8b b3       	in	r24, 0x1b	; 27
 160:	60 95       	com	r22
 162:	68 23       	and	r22, r24
 164:	6b bb       	out	0x1b, r22	; 27
	break;
	default:
	Ret=E_NOK;
	break;
	}
Ret=E_OK;
 166:	80 e0       	ldi	r24, 0x00	; 0
{
switch (GPIO)
{	case GPIOA:
	PORTA_DATA &= ~(pins);   // 0b01111111
Ret=E_OK;
	break;
 168:	08 95       	ret
	case GPIOB:
	PORTB_DATA &= ~(pins);
 16a:	88 b3       	in	r24, 0x18	; 24
 16c:	60 95       	com	r22
 16e:	68 23       	and	r22, r24
 170:	68 bb       	out	0x18, r22	; 24
	break;
	default:
	Ret=E_NOK;
	break;
	}
Ret=E_OK;
 172:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOB:
	PORTB_DATA &= ~(pins);
Ret=E_OK;
	break;
 174:	08 95       	ret
	case GPIOC:
	PORTC_DATA &= ~(pins);
 176:	85 b3       	in	r24, 0x15	; 21
 178:	60 95       	com	r22
 17a:	68 23       	and	r22, r24
 17c:	65 bb       	out	0x15, r22	; 21
	break;
	default:
	Ret=E_NOK;
	break;
	}
Ret=E_OK;
 17e:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOC:
	PORTC_DATA &= ~(pins);
Ret=E_OK;
	break;
 180:	08 95       	ret
	case GPIOD:
	PORTD_DATA &= ~(pins);
 182:	82 b3       	in	r24, 0x12	; 18
 184:	60 95       	com	r22
 186:	68 23       	and	r22, r24
 188:	62 bb       	out	0x12, r22	; 18
	break;
	default:
	Ret=E_NOK;
	break;
	}
Ret=E_OK;
 18a:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOD:
	PORTD_DATA &= ~(pins);
	Ret=E_OK;
	break;
 18c:	08 95       	ret
	}
Ret=E_OK;
break;
}
case HIGH:{
switch (GPIO)
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	61 f0       	breq	.+24     	; 0x1aa <DIO_Write+0x6a>
 192:	81 30       	cpi	r24, 0x01	; 1
 194:	28 f0       	brcs	.+10     	; 0x1a0 <DIO_Write+0x60>
 196:	82 30       	cpi	r24, 0x02	; 2
 198:	69 f0       	breq	.+26     	; 0x1b4 <DIO_Write+0x74>
 19a:	83 30       	cpi	r24, 0x03	; 3
 19c:	c9 f4       	brne	.+50     	; 0x1d0 <DIO_Write+0x90>
 19e:	0f c0       	rjmp	.+30     	; 0x1be <DIO_Write+0x7e>
{	case GPIOA:
	PORTA_DATA |=(pins);
 1a0:	8b b3       	in	r24, 0x1b	; 27
 1a2:	68 2b       	or	r22, r24
 1a4:	6b bb       	out	0x1b, r22	; 27
	break;
	default:
	Ret=E_NOK;
	break;
}
Ret=E_OK;
 1a6:	80 e0       	ldi	r24, 0x00	; 0
case HIGH:{
switch (GPIO)
{	case GPIOA:
	PORTA_DATA |=(pins);
Ret=E_OK;
	break;
 1a8:	08 95       	ret
	case GPIOB:
	PORTB_DATA |=(pins);
 1aa:	88 b3       	in	r24, 0x18	; 24
 1ac:	68 2b       	or	r22, r24
 1ae:	68 bb       	out	0x18, r22	; 24
	break;
	default:
	Ret=E_NOK;
	break;
}
Ret=E_OK;
 1b0:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOB:
	PORTB_DATA |=(pins);
Ret=E_OK;
	break;
 1b2:	08 95       	ret
	case GPIOC:
	PORTC_DATA |=(pins);
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	68 2b       	or	r22, r24
 1b8:	65 bb       	out	0x15, r22	; 21
	break;
	default:
	Ret=E_NOK;
	break;
}
Ret=E_OK;
 1ba:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOC:
	PORTC_DATA |=(pins);
Ret=E_OK;
	break;
 1bc:	08 95       	ret
	case GPIOD:
	PORTD_DATA |=(pins);
 1be:	82 b3       	in	r24, 0x12	; 18
 1c0:	68 2b       	or	r22, r24
 1c2:	62 bb       	out	0x12, r22	; 18
	break;
	default:
	Ret=E_NOK;
	break;
}
Ret=E_OK;
 1c4:	80 e0       	ldi	r24, 0x00	; 0
Ret=E_OK;
	break;
	case GPIOD:
	PORTD_DATA |=(pins);
Ret=E_OK;
	break;
 1c6:	08 95       	ret
}
Ret=E_OK;
break;
}
default:
Ret=E_NOK;
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	08 95       	ret
	break;
	default:
	Ret=E_NOK;
	break;
	}
Ret=E_OK;
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	08 95       	ret
	break;
	default:
	Ret=E_NOK;
	break;
}
Ret=E_OK;
 1d0:	80 e0       	ldi	r24, 0x00	; 0
default:
Ret=E_NOK;
break;
}
return Ret;
}
 1d2:	08 95       	ret

000001d4 <DIO_Read>:


ERROR_STATUS DIO_Read (uint8_t GPIO,uint8_t pins, uint8_t *data)
{
 1d4:	fa 01       	movw	r30, r20

switch (GPIO)
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	59 f0       	breq	.+22     	; 0x1f0 <DIO_Read+0x1c>
 1da:	81 30       	cpi	r24, 0x01	; 1
 1dc:	28 f0       	brcs	.+10     	; 0x1e8 <DIO_Read+0x14>
 1de:	82 30       	cpi	r24, 0x02	; 2
 1e0:	59 f0       	breq	.+22     	; 0x1f8 <DIO_Read+0x24>
 1e2:	83 30       	cpi	r24, 0x03	; 3
 1e4:	81 f4       	brne	.+32     	; 0x206 <DIO_Read+0x32>
 1e6:	0c c0       	rjmp	.+24     	; 0x200 <DIO_Read+0x2c>
{	case GPIOA:
	*data=(PORTA_PIN & pins);
 1e8:	89 b3       	in	r24, 0x19	; 25
 1ea:	68 23       	and	r22, r24
 1ec:	60 83       	st	Z, r22
	break;
 1ee:	0b c0       	rjmp	.+22     	; 0x206 <DIO_Read+0x32>
	case GPIOB:
	*data=(PORTB_PIN & pins);
 1f0:	86 b3       	in	r24, 0x16	; 22
 1f2:	68 23       	and	r22, r24
 1f4:	60 83       	st	Z, r22
	break;
 1f6:	07 c0       	rjmp	.+14     	; 0x206 <DIO_Read+0x32>
	case GPIOC:
	*data=(PORTC_PIN & pins);
 1f8:	83 b3       	in	r24, 0x13	; 19
 1fa:	68 23       	and	r22, r24
 1fc:	60 83       	st	Z, r22
	break;
 1fe:	03 c0       	rjmp	.+6      	; 0x206 <DIO_Read+0x32>
	case GPIOD:
	*data=(PORTD_PIN & pins);
 200:	80 b3       	in	r24, 0x10	; 16
 202:	68 23       	and	r22, r24
 204:	60 83       	st	Z, r22
	break;
}
if(*data > 0)
 206:	80 81       	ld	r24, Z
 208:	88 23       	and	r24, r24
 20a:	11 f0       	breq	.+4      	; 0x210 <DIO_Read+0x3c>
{
	*data = 1;
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	80 83       	st	Z, r24
}


}
 210:	08 95       	ret

00000212 <DIO_Toggle>:
ERROR_STATUS DIO_Toggle (uint8_t GPIO, uint8_t pins)
{
uint8_t ret=0;
	switch (GPIO)
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	61 f0       	breq	.+24     	; 0x22e <DIO_Toggle+0x1c>
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	28 f0       	brcs	.+10     	; 0x224 <DIO_Toggle+0x12>
 21a:	82 30       	cpi	r24, 0x02	; 2
 21c:	69 f0       	breq	.+26     	; 0x238 <DIO_Toggle+0x26>
 21e:	83 30       	cpi	r24, 0x03	; 3
 220:	a9 f4       	brne	.+42     	; 0x24c <DIO_Toggle+0x3a>
 222:	0f c0       	rjmp	.+30     	; 0x242 <DIO_Toggle+0x30>
	{	case GPIOA:
		PORTA_DATA ^=(pins);
 224:	8b b3       	in	r24, 0x1b	; 27
 226:	68 27       	eor	r22, r24
 228:	6b bb       	out	0x1b, r22	; 27
		ret=E_OK;
 22a:	80 e0       	ldi	r24, 0x00	; 0
		break;
 22c:	08 95       	ret
		case GPIOB:
		PORTB_DATA ^=(pins);
 22e:	88 b3       	in	r24, 0x18	; 24
 230:	68 27       	eor	r22, r24
 232:	68 bb       	out	0x18, r22	; 24
ret=E_OK;
 234:	80 e0       	ldi	r24, 0x00	; 0
		break;
 236:	08 95       	ret
		case GPIOC:
		PORTC_DATA ^=(pins);
 238:	85 b3       	in	r24, 0x15	; 21
 23a:	68 27       	eor	r22, r24
 23c:	65 bb       	out	0x15, r22	; 21
ret=E_OK;
 23e:	80 e0       	ldi	r24, 0x00	; 0
		break;
 240:	08 95       	ret
		case GPIOD:
		PORTD_DATA ^=(pins);
 242:	82 b3       	in	r24, 0x12	; 18
 244:	68 27       	eor	r22, r24
 246:	62 bb       	out	0x12, r22	; 18
ret=E_OK;
 248:	80 e0       	ldi	r24, 0x00	; 0
		break;
 24a:	08 95       	ret
		default:
		ret=E_NOK;
 24c:	81 e0       	ldi	r24, 0x01	; 1
		break;
	}

return ret;
}
 24e:	08 95       	ret

00000250 <Motor_Init>:

ERROR_STATUS Motor_Init(uint8_t Motor_Number)
{uint8_t Ret=0;
    

    switch(Motor_Number)
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	19 f0       	breq	.+6      	; 0x25a <Motor_Init+0xa>
 254:	82 30       	cpi	r24, 0x02	; 2
 256:	99 f4       	brne	.+38     	; 0x27e <Motor_Init+0x2e>
 258:	09 c0       	rjmp	.+18     	; 0x26c <Motor_Init+0x1c>
    {
        case MOTOR_1:
        /*Enable PWM Bit...output*/
        /*IN1*/
        /*IN2*/
			Ret=Pwm_Init(&PWM_Configuration_1A);
 25a:	88 e7       	ldi	r24, 0x78	; 120
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 42 01 	call	0x284	; 0x284 <Pwm_Init>
			Ret=DIO_init(&Motorone);
 262:	8f e6       	ldi	r24, 0x6F	; 111
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	0e 94 49 00 	call	0x92	; 0x92 <DIO_init>
		      
			  break;
 26a:	08 95       	ret

          case MOTOR_2:
		  Ret=Pwm_Init(&PWM_Configuration_1B);
 26c:	86 e7       	ldi	r24, 0x76	; 118
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 42 01 	call	0x284	; 0x284 <Pwm_Init>
          Ret=DIO_init(&Motortwo);
 274:	8c e6       	ldi	r24, 0x6C	; 108
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 49 00 	call	0x92	; 0x92 <DIO_init>
          break;
 27c:	08 95       	ret
#include "motor.h"



ERROR_STATUS Motor_Init(uint8_t Motor_Number)
{uint8_t Ret=0;
 27e:	80 e0       	ldi	r24, 0x00	; 0
          break;
    }


return Ret;
}
 280:	08 95       	ret

00000282 <main>:


#include <avr/io.h>

int main(void)
{
 282:	ff cf       	rjmp	.-2      	; 0x282 <main>

00000284 <Pwm_Init>:
/*                                                                               */
/* Description: initialize the PWM configuration                                 */
/*********************************************************************************/

ERROR_STATUS Pwm_Init(Pwm_Cfg_s *Pwm_Cfg)
{uint8_t Ret=0;
 284:	fc 01       	movw	r30, r24
	switch(Pwm_Cfg->Channel)
 286:	80 81       	ld	r24, Z
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	61 f0       	breq	.+24     	; 0x2a4 <Pwm_Init+0x20>
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	28 f0       	brcs	.+10     	; 0x29a <Pwm_Init+0x16>
 290:	82 30       	cpi	r24, 0x02	; 2
 292:	81 f0       	breq	.+32     	; 0x2b4 <Pwm_Init+0x30>
 294:	83 30       	cpi	r24, 0x03	; 3
 296:	d9 f4       	brne	.+54     	; 0x2ce <Pwm_Init+0x4a>
 298:	15 c0       	rjmp	.+42     	; 0x2c4 <Pwm_Init+0x40>
		{
			case PWM_CH0:
			TCCR0|=T0_PWM_FAST |T0_NON_INVERTING;
 29a:	83 b7       	in	r24, 0x33	; 51
 29c:	88 66       	ori	r24, 0x68	; 104
 29e:	83 bf       	out	0x33, r24	; 51
			Ret=E_OK;
 2a0:	80 e0       	ldi	r24, 0x00	; 0
			break;
 2a2:	16 c0       	rjmp	.+44     	; 0x2d0 <Pwm_Init+0x4c>

			case PWM_CH1A:
			TCCR1 |= T1_PWM_Phase_8 | T1_OC1A_OC1B|0x0020;
 2a4:	8e b5       	in	r24, 0x2e	; 46
 2a6:	9f b5       	in	r25, 0x2f	; 47
 2a8:	80 62       	ori	r24, 0x20	; 32
 2aa:	91 6a       	ori	r25, 0xA1	; 161
 2ac:	9f bd       	out	0x2f, r25	; 47
 2ae:	8e bd       	out	0x2e, r24	; 46
			Ret=E_OK;
 2b0:	80 e0       	ldi	r24, 0x00	; 0
			break;
 2b2:	0e c0       	rjmp	.+28     	; 0x2d0 <Pwm_Init+0x4c>

			case PWM_CH1B:
			TCCR1 |= T1_PWM_Phase_8 | T1_OC1A_OC1B;
 2b4:	8e b5       	in	r24, 0x2e	; 46
 2b6:	9f b5       	in	r25, 0x2f	; 47
 2b8:	80 62       	ori	r24, 0x20	; 32
 2ba:	91 6a       	ori	r25, 0xA1	; 161
 2bc:	9f bd       	out	0x2f, r25	; 47
 2be:	8e bd       	out	0x2e, r24	; 46
			Ret=E_OK;
 2c0:	80 e0       	ldi	r24, 0x00	; 0
			break;
 2c2:	06 c0       	rjmp	.+12     	; 0x2d0 <Pwm_Init+0x4c>


			case PWM_CH2:
			TCCR2 |=T2_PWM_FAST |T2_NON_INVERTING;
 2c4:	85 b5       	in	r24, 0x25	; 37
 2c6:	88 66       	ori	r24, 0x68	; 104
 2c8:	85 bd       	out	0x25, r24	; 37
			Ret=E_OK;
 2ca:	80 e0       	ldi	r24, 0x00	; 0
			break;
 2cc:	01 c0       	rjmp	.+2      	; 0x2d0 <Pwm_Init+0x4c>
			default:
			Ret=E_NOK;
 2ce:	81 e0       	ldi	r24, 0x01	; 1
			break;
		}
	sgl_Prescaler=Pwm_Cfg->Prescaler;
 2d0:	91 81       	ldd	r25, Z+1	; 0x01
 2d2:	90 93 7a 00 	sts	0x007A, r25
	u32g_T1_Prescaler=en_prescal;
	OCR1A =u16_outputCompareA;
	OCR1B =u16_outputCompareB;
	TCNT1=u16_initialValue;
	*/
}
 2d6:	08 95       	ret

000002d8 <Pwm_Start>:
/*-------------------------------------------------------                        */
/*((all this calculations are for phase correct mode))                           */
/*all this calculation for F_CPU 16MHz                                           */
/*********************************************************************************/
ERROR_STATUS Pwm_Start(uint8_t Channel,uint8_t Duty,uint32_t Frequncy)
{uint8_t Ret=0;
 2d8:	cf 92       	push	r12
 2da:	df 92       	push	r13
 2dc:	ef 92       	push	r14
 2de:	ff 92       	push	r15
 2e0:	0f 93       	push	r16
 2e2:	1f 93       	push	r17
 2e4:	89 01       	movw	r16, r18
 2e6:	9a 01       	movw	r18, r20
	float dutyReal;
uint32_t pwm_time_on = MAX_HOLD;

if(Frequncy <= 31372 && Frequncy > 3921 )
 2e8:	0f 2e       	mov	r0, r31
 2ea:	fe ea       	ldi	r31, 0xAE	; 174
 2ec:	cf 2e       	mov	r12, r31
 2ee:	f0 ef       	ldi	r31, 0xF0	; 240
 2f0:	df 2e       	mov	r13, r31
 2f2:	ff ef       	ldi	r31, 0xFF	; 255
 2f4:	ef 2e       	mov	r14, r31
 2f6:	ff ef       	ldi	r31, 0xFF	; 255
 2f8:	ff 2e       	mov	r15, r31
 2fa:	f0 2d       	mov	r31, r0
 2fc:	c0 0e       	add	r12, r16
 2fe:	d1 1e       	adc	r13, r17
 300:	e2 1e       	adc	r14, r18
 302:	f3 1e       	adc	r15, r19
 304:	9b e3       	ldi	r25, 0x3B	; 59
 306:	c9 16       	cp	r12, r25
 308:	9b e6       	ldi	r25, 0x6B	; 107
 30a:	d9 06       	cpc	r13, r25
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	e9 06       	cpc	r14, r25
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	f9 06       	cpc	r15, r25
 314:	18 f4       	brcc	.+6      	; 0x31c <Pwm_Start+0x44>
	sgl_Prescaler=PWM_PRESCALER_NO;
 316:	10 92 7a 00 	sts	0x007A, r1
 31a:	a2 c0       	rjmp	.+324    	; 0x460 <Pwm_Start+0x188>
else if(Frequncy <= 3921 && Frequncy > 980)
 31c:	0f 2e       	mov	r0, r31
 31e:	fb e2       	ldi	r31, 0x2B	; 43
 320:	cf 2e       	mov	r12, r31
 322:	fc ef       	ldi	r31, 0xFC	; 252
 324:	df 2e       	mov	r13, r31
 326:	ff ef       	ldi	r31, 0xFF	; 255
 328:	ef 2e       	mov	r14, r31
 32a:	ff ef       	ldi	r31, 0xFF	; 255
 32c:	ff 2e       	mov	r15, r31
 32e:	f0 2d       	mov	r31, r0
 330:	c0 0e       	add	r12, r16
 332:	d1 1e       	adc	r13, r17
 334:	e2 1e       	adc	r14, r18
 336:	f3 1e       	adc	r15, r19
 338:	9d e7       	ldi	r25, 0x7D	; 125
 33a:	c9 16       	cp	r12, r25
 33c:	9b e0       	ldi	r25, 0x0B	; 11
 33e:	d9 06       	cpc	r13, r25
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	e9 06       	cpc	r14, r25
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	f9 06       	cpc	r15, r25
 348:	20 f4       	brcc	.+8      	; 0x352 <Pwm_Start+0x7a>
	sgl_Prescaler=PWM_PRESCALER_8;
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	90 93 7a 00 	sts	0x007A, r25
 350:	a5 c0       	rjmp	.+330    	; 0x49c <Pwm_Start+0x1c4>
else if(Frequncy <= 980 && Frequncy > 490)
 352:	0f 2e       	mov	r0, r31
 354:	f5 e1       	ldi	r31, 0x15	; 21
 356:	cf 2e       	mov	r12, r31
 358:	fe ef       	ldi	r31, 0xFE	; 254
 35a:	df 2e       	mov	r13, r31
 35c:	ff ef       	ldi	r31, 0xFF	; 255
 35e:	ef 2e       	mov	r14, r31
 360:	ff ef       	ldi	r31, 0xFF	; 255
 362:	ff 2e       	mov	r15, r31
 364:	f0 2d       	mov	r31, r0
 366:	c0 0e       	add	r12, r16
 368:	d1 1e       	adc	r13, r17
 36a:	e2 1e       	adc	r14, r18
 36c:	f3 1e       	adc	r15, r19
 36e:	9a ee       	ldi	r25, 0xEA	; 234
 370:	c9 16       	cp	r12, r25
 372:	91 e0       	ldi	r25, 0x01	; 1
 374:	d9 06       	cpc	r13, r25
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	e9 06       	cpc	r14, r25
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	f9 06       	cpc	r15, r25
 37e:	20 f4       	brcc	.+8      	; 0x388 <Pwm_Start+0xb0>
	sgl_Prescaler=PWM_PRESCALER_32;
 380:	92 e0       	ldi	r25, 0x02	; 2
 382:	90 93 7a 00 	sts	0x007A, r25
 386:	a1 c0       	rjmp	.+322    	; 0x4ca <Pwm_Start+0x1f2>
else if(Frequncy <= 490 && Frequncy > 245)
 388:	0f 2e       	mov	r0, r31
 38a:	fa e0       	ldi	r31, 0x0A	; 10
 38c:	cf 2e       	mov	r12, r31
 38e:	ff ef       	ldi	r31, 0xFF	; 255
 390:	df 2e       	mov	r13, r31
 392:	ff ef       	ldi	r31, 0xFF	; 255
 394:	ef 2e       	mov	r14, r31
 396:	ff ef       	ldi	r31, 0xFF	; 255
 398:	ff 2e       	mov	r15, r31
 39a:	f0 2d       	mov	r31, r0
 39c:	c0 0e       	add	r12, r16
 39e:	d1 1e       	adc	r13, r17
 3a0:	e2 1e       	adc	r14, r18
 3a2:	f3 1e       	adc	r15, r19
 3a4:	95 ef       	ldi	r25, 0xF5	; 245
 3a6:	c9 16       	cp	r12, r25
 3a8:	d1 04       	cpc	r13, r1
 3aa:	e1 04       	cpc	r14, r1
 3ac:	f1 04       	cpc	r15, r1
 3ae:	20 f4       	brcc	.+8      	; 0x3b8 <Pwm_Start+0xe0>
	sgl_Prescaler=PWM_PRESCALER_64;
 3b0:	93 e0       	ldi	r25, 0x03	; 3
 3b2:	90 93 7a 00 	sts	0x007A, r25
 3b6:	90 c0       	rjmp	.+288    	; 0x4d8 <Pwm_Start+0x200>
else if(Frequncy <= 245 && Frequncy > 122)
 3b8:	0f 2e       	mov	r0, r31
 3ba:	f5 e8       	ldi	r31, 0x85	; 133
 3bc:	cf 2e       	mov	r12, r31
 3be:	ff ef       	ldi	r31, 0xFF	; 255
 3c0:	df 2e       	mov	r13, r31
 3c2:	ff ef       	ldi	r31, 0xFF	; 255
 3c4:	ef 2e       	mov	r14, r31
 3c6:	ff ef       	ldi	r31, 0xFF	; 255
 3c8:	ff 2e       	mov	r15, r31
 3ca:	f0 2d       	mov	r31, r0
 3cc:	c0 0e       	add	r12, r16
 3ce:	d1 1e       	adc	r13, r17
 3d0:	e2 1e       	adc	r14, r18
 3d2:	f3 1e       	adc	r15, r19
 3d4:	9b e7       	ldi	r25, 0x7B	; 123
 3d6:	c9 16       	cp	r12, r25
 3d8:	d1 04       	cpc	r13, r1
 3da:	e1 04       	cpc	r14, r1
 3dc:	f1 04       	cpc	r15, r1
 3de:	20 f4       	brcc	.+8      	; 0x3e8 <Pwm_Start+0x110>
	sgl_Prescaler=PWM_PRESCALER_128;
 3e0:	94 e0       	ldi	r25, 0x04	; 4
 3e2:	90 93 7a 00 	sts	0x007A, r25
 3e6:	a5 c0       	rjmp	.+330    	; 0x532 <Pwm_Start+0x25a>
else if(Frequncy <= 122 && Frequncy > 31)
 3e8:	0f 2e       	mov	r0, r31
 3ea:	f0 ee       	ldi	r31, 0xE0	; 224
 3ec:	cf 2e       	mov	r12, r31
 3ee:	ff ef       	ldi	r31, 0xFF	; 255
 3f0:	df 2e       	mov	r13, r31
 3f2:	ff ef       	ldi	r31, 0xFF	; 255
 3f4:	ef 2e       	mov	r14, r31
 3f6:	ff ef       	ldi	r31, 0xFF	; 255
 3f8:	ff 2e       	mov	r15, r31
 3fa:	f0 2d       	mov	r31, r0
 3fc:	c0 0e       	add	r12, r16
 3fe:	d1 1e       	adc	r13, r17
 400:	e2 1e       	adc	r14, r18
 402:	f3 1e       	adc	r15, r19
 404:	9b e5       	ldi	r25, 0x5B	; 91
 406:	c9 16       	cp	r12, r25
 408:	d1 04       	cpc	r13, r1
 40a:	e1 04       	cpc	r14, r1
 40c:	f1 04       	cpc	r15, r1
 40e:	20 f4       	brcc	.+8      	; 0x418 <Pwm_Start+0x140>
	sgl_Prescaler=PWM_PRESCALER_256;
 410:	95 e0       	ldi	r25, 0x05	; 5
 412:	90 93 7a 00 	sts	0x007A, r25
 416:	77 c0       	rjmp	.+238    	; 0x506 <Pwm_Start+0x22e>
else if(Frequncy <= 31 && Frequncy > 0)
 418:	01 50       	subi	r16, 0x01	; 1
 41a:	10 40       	sbci	r17, 0x00	; 0
 41c:	20 40       	sbci	r18, 0x00	; 0
 41e:	30 40       	sbci	r19, 0x00	; 0
 420:	0f 31       	cpi	r16, 0x1F	; 31
 422:	11 05       	cpc	r17, r1
 424:	21 05       	cpc	r18, r1
 426:	31 05       	cpc	r19, r1
 428:	20 f4       	brcc	.+8      	; 0x432 <Pwm_Start+0x15a>
	sgl_Prescaler=PWM_PRESCALER_1024;
 42a:	96 e0       	ldi	r25, 0x06	; 6
 42c:	90 93 7a 00 	sts	0x007A, r25
 430:	86 c0       	rjmp	.+268    	; 0x53e <Pwm_Start+0x266>
else{Ret=E_NOK;}
switch(sgl_Prescaler)
 432:	90 91 7a 00 	lds	r25, 0x007A
 436:	93 30       	cpi	r25, 0x03	; 3
 438:	09 f4       	brne	.+2      	; 0x43c <Pwm_Start+0x164>
 43a:	4e c0       	rjmp	.+156    	; 0x4d8 <Pwm_Start+0x200>
 43c:	94 30       	cpi	r25, 0x04	; 4
 43e:	30 f4       	brcc	.+12     	; 0x44c <Pwm_Start+0x174>
 440:	91 30       	cpi	r25, 0x01	; 1
 442:	61 f1       	breq	.+88     	; 0x49c <Pwm_Start+0x1c4>
 444:	92 30       	cpi	r25, 0x02	; 2
 446:	08 f0       	brcs	.+2      	; 0x44a <Pwm_Start+0x172>
 448:	40 c0       	rjmp	.+128    	; 0x4ca <Pwm_Start+0x1f2>
 44a:	0a c0       	rjmp	.+20     	; 0x460 <Pwm_Start+0x188>
 44c:	95 30       	cpi	r25, 0x05	; 5
 44e:	09 f4       	brne	.+2      	; 0x452 <Pwm_Start+0x17a>
 450:	5a c0       	rjmp	.+180    	; 0x506 <Pwm_Start+0x22e>
 452:	95 30       	cpi	r25, 0x05	; 5
 454:	08 f4       	brcc	.+2      	; 0x458 <Pwm_Start+0x180>
 456:	6d c0       	rjmp	.+218    	; 0x532 <Pwm_Start+0x25a>
 458:	96 30       	cpi	r25, 0x06	; 6
 45a:	09 f0       	breq	.+2      	; 0x45e <Pwm_Start+0x186>
 45c:	8d c0       	rjmp	.+282    	; 0x578 <Pwm_Start+0x2a0>
 45e:	6f c0       	rjmp	.+222    	; 0x53e <Pwm_Start+0x266>
{
	case PWM_PRESCALER_NO:
	{
		switch(Channel)
 460:	81 30       	cpi	r24, 0x01	; 1
 462:	61 f0       	breq	.+24     	; 0x47c <Pwm_Start+0x1a4>
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	30 f0       	brcs	.+12     	; 0x474 <Pwm_Start+0x19c>
 468:	82 30       	cpi	r24, 0x02	; 2
 46a:	71 f0       	breq	.+28     	; 0x488 <Pwm_Start+0x1b0>
 46c:	83 30       	cpi	r24, 0x03	; 3
 46e:	09 f0       	breq	.+2      	; 0x472 <Pwm_Start+0x19a>
 470:	83 c0       	rjmp	.+262    	; 0x578 <Pwm_Start+0x2a0>
 472:	10 c0       	rjmp	.+32     	; 0x494 <Pwm_Start+0x1bc>
		{
			case PWM_CH0:
			{
				TCCR0|=PWM_PRESCALER_NO_CONFIG;
 474:	83 b7       	in	r24, 0x33	; 51
 476:	81 60       	ori	r24, 0x01	; 1
 478:	83 bf       	out	0x33, r24	; 51
				Ret=E_OK;
				break;
 47a:	88 c0       	rjmp	.+272    	; 0x58c <Pwm_Start+0x2b4>
			}
			case PWM_CH1A:
			{
			TCCR1|=PWM_PRESCALER_NO_CONFIG;
 47c:	8e b5       	in	r24, 0x2e	; 46
 47e:	9f b5       	in	r25, 0x2f	; 47
 480:	81 60       	ori	r24, 0x01	; 1
 482:	9f bd       	out	0x2f, r25	; 47
 484:	8e bd       	out	0x2e, r24	; 46
			Ret=E_OK;
			break;
 486:	98 c0       	rjmp	.+304    	; 0x5b8 <Pwm_Start+0x2e0>
			}			
			case PWM_CH1B:
			{	TCCR1|=PWM_PRESCALER_NO_CONFIG;
 488:	8e b5       	in	r24, 0x2e	; 46
 48a:	9f b5       	in	r25, 0x2f	; 47
 48c:	81 60       	ori	r24, 0x01	; 1
 48e:	9f bd       	out	0x2f, r25	; 47
 490:	8e bd       	out	0x2e, r24	; 46
				Ret=E_OK;
				break;
 492:	ad c0       	rjmp	.+346    	; 0x5ee <Pwm_Start+0x316>
			}
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_NO_CONFIG;
 494:	85 b5       	in	r24, 0x25	; 37
 496:	81 60       	ori	r24, 0x01	; 1
 498:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 49a:	c4 c0       	rjmp	.+392    	; 0x624 <Pwm_Start+0x34c>
	}

	
	case PWM_PRESCALER_8:
	{
		switch(Channel)
 49c:	83 30       	cpi	r24, 0x03	; 3
 49e:	18 f4       	brcc	.+6      	; 0x4a6 <Pwm_Start+0x1ce>
 4a0:	81 30       	cpi	r24, 0x01	; 1
 4a2:	48 f4       	brcc	.+18     	; 0x4b6 <Pwm_Start+0x1de>
 4a4:	04 c0       	rjmp	.+8      	; 0x4ae <Pwm_Start+0x1d6>
 4a6:	83 30       	cpi	r24, 0x03	; 3
 4a8:	09 f0       	breq	.+2      	; 0x4ac <Pwm_Start+0x1d4>
 4aa:	66 c0       	rjmp	.+204    	; 0x578 <Pwm_Start+0x2a0>
 4ac:	0a c0       	rjmp	.+20     	; 0x4c2 <Pwm_Start+0x1ea>
		{
			case PWM_CH0:
			{
				TCCR0|=PWM_PRESCALER_8_CONFIG;
 4ae:	83 b7       	in	r24, 0x33	; 51
 4b0:	82 60       	ori	r24, 0x02	; 2
 4b2:	83 bf       	out	0x33, r24	; 51
				Ret=E_OK;
				break;
 4b4:	6b c0       	rjmp	.+214    	; 0x58c <Pwm_Start+0x2b4>
			}
			case PWM_CH1A:
			case PWM_CH1B:
			{	TCCR1|=PWM_PRESCALER_8_CONFIG;
 4b6:	2e b5       	in	r18, 0x2e	; 46
 4b8:	3f b5       	in	r19, 0x2f	; 47
 4ba:	22 60       	ori	r18, 0x02	; 2
 4bc:	3f bd       	out	0x2f, r19	; 47
 4be:	2e bd       	out	0x2e, r18	; 46
				Ret=E_OK;
				break;
 4c0:	5b c0       	rjmp	.+182    	; 0x578 <Pwm_Start+0x2a0>
			}
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_8_CONFIG;
 4c2:	85 b5       	in	r24, 0x25	; 37
 4c4:	82 60       	ori	r24, 0x02	; 2
 4c6:	85 bd       	out	0x25, r24	; 37
			Ret=E_OK;	
				break;
 4c8:	ad c0       	rjmp	.+346    	; 0x624 <Pwm_Start+0x34c>
		break;
	}
	
	case PWM_PRESCALER_32:
	{
		switch(Channel)
 4ca:	83 30       	cpi	r24, 0x03	; 3
 4cc:	09 f0       	breq	.+2      	; 0x4d0 <Pwm_Start+0x1f8>
 4ce:	54 c0       	rjmp	.+168    	; 0x578 <Pwm_Start+0x2a0>
		{
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_32_CONFIG_T2;
 4d0:	85 b5       	in	r24, 0x25	; 37
 4d2:	83 60       	ori	r24, 0x03	; 3
 4d4:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 4d6:	a6 c0       	rjmp	.+332    	; 0x624 <Pwm_Start+0x34c>
		break;
	}
	
	case PWM_PRESCALER_64:
	{
		switch(Channel)
 4d8:	83 30       	cpi	r24, 0x03	; 3
 4da:	18 f4       	brcc	.+6      	; 0x4e2 <Pwm_Start+0x20a>
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	48 f4       	brcc	.+18     	; 0x4f2 <Pwm_Start+0x21a>
 4e0:	04 c0       	rjmp	.+8      	; 0x4ea <Pwm_Start+0x212>
 4e2:	83 30       	cpi	r24, 0x03	; 3
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <Pwm_Start+0x210>
 4e6:	48 c0       	rjmp	.+144    	; 0x578 <Pwm_Start+0x2a0>
 4e8:	0a c0       	rjmp	.+20     	; 0x4fe <Pwm_Start+0x226>
		{
			case PWM_CH0:
			{
				TCCR0|=PWM_PRESCALER_64_CONFIG;
 4ea:	83 b7       	in	r24, 0x33	; 51
 4ec:	83 60       	ori	r24, 0x03	; 3
 4ee:	83 bf       	out	0x33, r24	; 51
				Ret=E_OK;
				break;
 4f0:	4d c0       	rjmp	.+154    	; 0x58c <Pwm_Start+0x2b4>
			}
			case PWM_CH1A:
			case PWM_CH1B:
			{	TCCR1|=PWM_PRESCALER_64_CONFIG;
 4f2:	2e b5       	in	r18, 0x2e	; 46
 4f4:	3f b5       	in	r19, 0x2f	; 47
 4f6:	23 60       	ori	r18, 0x03	; 3
 4f8:	3f bd       	out	0x2f, r19	; 47
 4fa:	2e bd       	out	0x2e, r18	; 46
				Ret=E_OK;
				break;
 4fc:	3d c0       	rjmp	.+122    	; 0x578 <Pwm_Start+0x2a0>
			}
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_64_CONFIG_T2;
 4fe:	85 b5       	in	r24, 0x25	; 37
 500:	84 60       	ori	r24, 0x04	; 4
 502:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 504:	8f c0       	rjmp	.+286    	; 0x624 <Pwm_Start+0x34c>
		break;
	}
	
	case PWM_PRESCALER_256:
	{
		switch(Channel)
 506:	83 30       	cpi	r24, 0x03	; 3
 508:	18 f4       	brcc	.+6      	; 0x510 <Pwm_Start+0x238>
 50a:	81 30       	cpi	r24, 0x01	; 1
 50c:	40 f4       	brcc	.+16     	; 0x51e <Pwm_Start+0x246>
 50e:	03 c0       	rjmp	.+6      	; 0x516 <Pwm_Start+0x23e>
 510:	83 30       	cpi	r24, 0x03	; 3
 512:	91 f5       	brne	.+100    	; 0x578 <Pwm_Start+0x2a0>
 514:	0a c0       	rjmp	.+20     	; 0x52a <Pwm_Start+0x252>
		{
			case PWM_CH0:
			{
				TCCR0|=PWM_PRESCALER_64_CONFIG;
 516:	83 b7       	in	r24, 0x33	; 51
 518:	83 60       	ori	r24, 0x03	; 3
 51a:	83 bf       	out	0x33, r24	; 51
				Ret=E_OK;
				break;
 51c:	37 c0       	rjmp	.+110    	; 0x58c <Pwm_Start+0x2b4>
			}
			case PWM_CH1A:
			case PWM_CH1B:
			{	TCCR1|=PWM_PRESCALER_64_CONFIG;
 51e:	2e b5       	in	r18, 0x2e	; 46
 520:	3f b5       	in	r19, 0x2f	; 47
 522:	23 60       	ori	r18, 0x03	; 3
 524:	3f bd       	out	0x2f, r19	; 47
 526:	2e bd       	out	0x2e, r18	; 46
				Ret=E_OK;
				break;
 528:	27 c0       	rjmp	.+78     	; 0x578 <Pwm_Start+0x2a0>
			}
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_64_CONFIG_T2;
 52a:	85 b5       	in	r24, 0x25	; 37
 52c:	84 60       	ori	r24, 0x04	; 4
 52e:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 530:	79 c0       	rjmp	.+242    	; 0x624 <Pwm_Start+0x34c>
		break;
	}
	
	case PWM_PRESCALER_128:
	{
		switch(Channel)
 532:	83 30       	cpi	r24, 0x03	; 3
 534:	09 f5       	brne	.+66     	; 0x578 <Pwm_Start+0x2a0>
		{
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_128_CONFIG_T2;
 536:	85 b5       	in	r24, 0x25	; 37
 538:	85 60       	ori	r24, 0x05	; 5
 53a:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 53c:	73 c0       	rjmp	.+230    	; 0x624 <Pwm_Start+0x34c>
		break;
	}
	
	case PWM_PRESCALER_1024:
	{
		switch(Channel)
 53e:	81 30       	cpi	r24, 0x01	; 1
 540:	59 f0       	breq	.+22     	; 0x558 <Pwm_Start+0x280>
 542:	81 30       	cpi	r24, 0x01	; 1
 544:	28 f0       	brcs	.+10     	; 0x550 <Pwm_Start+0x278>
 546:	82 30       	cpi	r24, 0x02	; 2
 548:	69 f0       	breq	.+26     	; 0x564 <Pwm_Start+0x28c>
 54a:	83 30       	cpi	r24, 0x03	; 3
 54c:	a9 f4       	brne	.+42     	; 0x578 <Pwm_Start+0x2a0>
 54e:	10 c0       	rjmp	.+32     	; 0x570 <Pwm_Start+0x298>
		{
			case PWM_CH0:
			{
				TCCR0|=PWM_PRESCALER_1024_CONFIG;
 550:	83 b7       	in	r24, 0x33	; 51
 552:	85 60       	ori	r24, 0x05	; 5
 554:	83 bf       	out	0x33, r24	; 51
				Ret=E_OK;
				break;
 556:	1a c0       	rjmp	.+52     	; 0x58c <Pwm_Start+0x2b4>
			}
			case PWM_CH1A:
			{	TCCR1|=PWM_PRESCALER_NO_CONFIG;
 558:	8e b5       	in	r24, 0x2e	; 46
 55a:	9f b5       	in	r25, 0x2f	; 47
 55c:	81 60       	ori	r24, 0x01	; 1
 55e:	9f bd       	out	0x2f, r25	; 47
 560:	8e bd       	out	0x2e, r24	; 46
				Ret=E_OK;
				break;
 562:	2a c0       	rjmp	.+84     	; 0x5b8 <Pwm_Start+0x2e0>
			}
			case PWM_CH1B:
			{	TCCR1|=PWM_PRESCALER_1024_CONFIG;
 564:	8e b5       	in	r24, 0x2e	; 46
 566:	9f b5       	in	r25, 0x2f	; 47
 568:	85 60       	ori	r24, 0x05	; 5
 56a:	9f bd       	out	0x2f, r25	; 47
 56c:	8e bd       	out	0x2e, r24	; 46
				Ret=E_OK;
				break;
 56e:	3f c0       	rjmp	.+126    	; 0x5ee <Pwm_Start+0x316>
			}
			case PWM_CH2:
			{TCCR2|=PWM_PRESCALER_1024_CONFIG_T2;
 570:	85 b5       	in	r24, 0x25	; 37
 572:	87 60       	ori	r24, 0x07	; 7
 574:	85 bd       	out	0x25, r24	; 37
				Ret=E_OK;
				break;
 576:	56 c0       	rjmp	.+172    	; 0x624 <Pwm_Start+0x34c>

	
	
}

switch(Channel)
 578:	81 30       	cpi	r24, 0x01	; 1
 57a:	f1 f0       	breq	.+60     	; 0x5b8 <Pwm_Start+0x2e0>
 57c:	81 30       	cpi	r24, 0x01	; 1
 57e:	30 f0       	brcs	.+12     	; 0x58c <Pwm_Start+0x2b4>
 580:	82 30       	cpi	r24, 0x02	; 2
 582:	a9 f1       	breq	.+106    	; 0x5ee <Pwm_Start+0x316>
 584:	83 30       	cpi	r24, 0x03	; 3
 586:	09 f0       	breq	.+2      	; 0x58a <Pwm_Start+0x2b2>
 588:	63 c0       	rjmp	.+198    	; 0x650 <Pwm_Start+0x378>
 58a:	4c c0       	rjmp	.+152    	; 0x624 <Pwm_Start+0x34c>
		{
			case PWM_CH0:{
			pwm_time_on=MAX_HOLD;
			dutyReal=((float)Duty/(float)FULL_SPEED);
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__floatunsisf>
 596:	20 e0       	ldi	r18, 0x00	; 0
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	48 ec       	ldi	r20, 0xC8	; 200
 59c:	52 e4       	ldi	r21, 0x42	; 66
 59e:	0e 94 56 03 	call	0x6ac	; 0x6ac <__divsf3>
			pwm_time_on=(float)pwm_time_on*dutyReal;
 5a2:	20 e0       	ldi	r18, 0x00	; 0
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	4f e7       	ldi	r20, 0x7F	; 127
 5a8:	53 e4       	ldi	r21, 0x43	; 67
 5aa:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
 5ae:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
			OCR0=pwm_time_on;
 5b2:	6c bf       	out	0x3c, r22	; 60
			Ret=E_OK;
 5b4:	80 e0       	ldi	r24, 0x00	; 0
			break;
 5b6:	4d c0       	rjmp	.+154    	; 0x652 <Pwm_Start+0x37a>
			}			
			case PWM_CH1A:{
			pwm_time_on=MAX_HOLD;
			dutyReal=((float)Duty/(float)FULL_SPEED);
 5b8:	70 e0       	ldi	r23, 0x00	; 0
 5ba:	80 e0       	ldi	r24, 0x00	; 0
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__floatunsisf>
 5c2:	20 e0       	ldi	r18, 0x00	; 0
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	48 ec       	ldi	r20, 0xC8	; 200
 5c8:	52 e4       	ldi	r21, 0x42	; 66
 5ca:	0e 94 56 03 	call	0x6ac	; 0x6ac <__divsf3>
			pwm_time_on=(float)pwm_time_on*dutyReal;
 5ce:	20 e0       	ldi	r18, 0x00	; 0
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	4f e7       	ldi	r20, 0x7F	; 127
 5d4:	53 e4       	ldi	r21, 0x43	; 67
 5d6:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
 5da:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
 5de:	dc 01       	movw	r26, r24
 5e0:	cb 01       	movw	r24, r22
			OCR1A=pwm_time_on;
 5e2:	9b bd       	out	0x2b, r25	; 43
 5e4:	8a bd       	out	0x2a, r24	; 42
			OCR1B=pwm_time_on;
 5e6:	99 bd       	out	0x29, r25	; 41
 5e8:	88 bd       	out	0x28, r24	; 40
			Ret=E_OK;
 5ea:	80 e0       	ldi	r24, 0x00	; 0
			break;
 5ec:	32 c0       	rjmp	.+100    	; 0x652 <Pwm_Start+0x37a>
			}			
			case PWM_CH1B:{
			pwm_time_on=MAX_HOLD;
			dutyReal=((float)Duty/(float)FULL_SPEED);
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__floatunsisf>
 5f8:	20 e0       	ldi	r18, 0x00	; 0
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	48 ec       	ldi	r20, 0xC8	; 200
 5fe:	52 e4       	ldi	r21, 0x42	; 66
 600:	0e 94 56 03 	call	0x6ac	; 0x6ac <__divsf3>
			pwm_time_on=(float)pwm_time_on*dutyReal;
 604:	20 e0       	ldi	r18, 0x00	; 0
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	4f e7       	ldi	r20, 0x7F	; 127
 60a:	53 e4       	ldi	r21, 0x43	; 67
 60c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
 610:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
 614:	dc 01       	movw	r26, r24
 616:	cb 01       	movw	r24, r22
			OCR1A=pwm_time_on;
 618:	9b bd       	out	0x2b, r25	; 43
 61a:	8a bd       	out	0x2a, r24	; 42
			OCR1B=pwm_time_on;
 61c:	99 bd       	out	0x29, r25	; 41
 61e:	88 bd       	out	0x28, r24	; 40
			Ret=E_OK;
 620:	80 e0       	ldi	r24, 0x00	; 0
			break;
 622:	17 c0       	rjmp	.+46     	; 0x652 <Pwm_Start+0x37a>
			}
			case PWM_CH2:{
			pwm_time_on=MAX_HOLD;	
			dutyReal=((float)Duty/(float)FULL_SPEED);
 624:	70 e0       	ldi	r23, 0x00	; 0
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <__floatunsisf>
 62e:	20 e0       	ldi	r18, 0x00	; 0
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	48 ec       	ldi	r20, 0xC8	; 200
 634:	52 e4       	ldi	r21, 0x42	; 66
 636:	0e 94 56 03 	call	0x6ac	; 0x6ac <__divsf3>
			pwm_time_on=(float)pwm_time_on*dutyReal;
 63a:	20 e0       	ldi	r18, 0x00	; 0
 63c:	30 e0       	ldi	r19, 0x00	; 0
 63e:	4f e7       	ldi	r20, 0x7F	; 127
 640:	53 e4       	ldi	r21, 0x43	; 67
 642:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsf3>
 646:	0e 94 be 03 	call	0x77c	; 0x77c <__fixunssfsi>
			OCR2=pwm_time_on;
 64a:	63 bd       	out	0x23, r22	; 35
			Ret=E_OK;
 64c:	80 e0       	ldi	r24, 0x00	; 0
			}			
			break;
 64e:	01 c0       	rjmp	.+2      	; 0x652 <Pwm_Start+0x37a>
			default:
			Ret=E_NOK;
 650:	81 e0       	ldi	r24, 0x01	; 1
			break;
		}
sgl_is_started=1;
 652:	91 e0       	ldi	r25, 0x01	; 1
 654:	90 93 7b 00 	sts	0x007B, r25
return Ret;
}
 658:	1f 91       	pop	r17
 65a:	0f 91       	pop	r16
 65c:	ff 90       	pop	r15
 65e:	ef 90       	pop	r14
 660:	df 90       	pop	r13
 662:	cf 90       	pop	r12
 664:	08 95       	ret

00000666 <Pwm_Update>:


ERROR_STATUS Pwm_Update(uint8_t Channel,uint8_t Duty,uint32_t Frequncy)
{
uint8_t Ret=0;
if (sgl_is_started == 1)
 666:	90 91 7b 00 	lds	r25, 0x007B
 66a:	91 30       	cpi	r25, 0x01	; 1
 66c:	21 f4       	brne	.+8      	; 0x676 <Pwm_Update+0x10>
{
	Pwm_Start( Channel,Duty,Frequncy);
 66e:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <Pwm_Start>
Ret=E_OK;
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	08 95       	ret
}else{Ret=E_NOK;}
 676:	81 e0       	ldi	r24, 0x01	; 1
	

return Ret;
}
 678:	08 95       	ret

0000067a <Pwm_Stop>:
/*********************************************************************************/

ERROR_STATUS Pwm_Stop(uint8_t Channel)
{
uint8_t Ret=0;
switch(Channel)
 67a:	83 30       	cpi	r24, 0x03	; 3
 67c:	18 f4       	brcc	.+6      	; 0x684 <Pwm_Stop+0xa>
 67e:	81 30       	cpi	r24, 0x01	; 1
 680:	48 f4       	brcc	.+18     	; 0x694 <Pwm_Stop+0x1a>
 682:	03 c0       	rjmp	.+6      	; 0x68a <Pwm_Stop+0x10>
 684:	83 30       	cpi	r24, 0x03	; 3
 686:	81 f4       	brne	.+32     	; 0x6a8 <Pwm_Stop+0x2e>
 688:	0a c0       	rjmp	.+20     	; 0x69e <Pwm_Stop+0x24>
{
	case PWM_CH0:
	TCCR0 &=TIMER_STOPT02;
 68a:	83 b7       	in	r24, 0x33	; 51
 68c:	88 7f       	andi	r24, 0xF8	; 248
 68e:	83 bf       	out	0x33, r24	; 51
	Ret=E_OK;
 690:	80 e0       	ldi	r24, 0x00	; 0
	break;
 692:	08 95       	ret

	case PWM_CH1A:
	case PWM_CH1B:
	TCCR0 &=TIMER_STOPT1;
 694:	83 b7       	in	r24, 0x33	; 51
 696:	88 7f       	andi	r24, 0xF8	; 248
 698:	83 bf       	out	0x33, r24	; 51
	Ret=E_OK;
 69a:	80 e0       	ldi	r24, 0x00	; 0
	break;
 69c:	08 95       	ret


	case PWM_CH2:
	TCCR2 &=TIMER_STOPT02;
 69e:	85 b5       	in	r24, 0x25	; 37
 6a0:	88 7f       	andi	r24, 0xF8	; 248
 6a2:	85 bd       	out	0x25, r24	; 37
	Ret=E_OK;
 6a4:	80 e0       	ldi	r24, 0x00	; 0
	break;
 6a6:	08 95       	ret
	default:
	Ret=E_NOK;
 6a8:	81 e0       	ldi	r24, 0x01	; 1
	break;
}

return Ret;
}
 6aa:	08 95       	ret

000006ac <__divsf3>:
 6ac:	0c d0       	rcall	.+24     	; 0x6c6 <__divsf3x>
 6ae:	e6 c0       	rjmp	.+460    	; 0x87c <__fp_round>
 6b0:	de d0       	rcall	.+444    	; 0x86e <__fp_pscB>
 6b2:	40 f0       	brcs	.+16     	; 0x6c4 <__divsf3+0x18>
 6b4:	d5 d0       	rcall	.+426    	; 0x860 <__fp_pscA>
 6b6:	30 f0       	brcs	.+12     	; 0x6c4 <__divsf3+0x18>
 6b8:	21 f4       	brne	.+8      	; 0x6c2 <__divsf3+0x16>
 6ba:	5f 3f       	cpi	r21, 0xFF	; 255
 6bc:	19 f0       	breq	.+6      	; 0x6c4 <__divsf3+0x18>
 6be:	c7 c0       	rjmp	.+398    	; 0x84e <__fp_inf>
 6c0:	51 11       	cpse	r21, r1
 6c2:	10 c1       	rjmp	.+544    	; 0x8e4 <__fp_szero>
 6c4:	ca c0       	rjmp	.+404    	; 0x85a <__fp_nan>

000006c6 <__divsf3x>:
 6c6:	eb d0       	rcall	.+470    	; 0x89e <__fp_split3>
 6c8:	98 f3       	brcs	.-26     	; 0x6b0 <__divsf3+0x4>

000006ca <__divsf3_pse>:
 6ca:	99 23       	and	r25, r25
 6cc:	c9 f3       	breq	.-14     	; 0x6c0 <__divsf3+0x14>
 6ce:	55 23       	and	r21, r21
 6d0:	b1 f3       	breq	.-20     	; 0x6be <__divsf3+0x12>
 6d2:	95 1b       	sub	r25, r21
 6d4:	55 0b       	sbc	r21, r21
 6d6:	bb 27       	eor	r27, r27
 6d8:	aa 27       	eor	r26, r26
 6da:	62 17       	cp	r22, r18
 6dc:	73 07       	cpc	r23, r19
 6de:	84 07       	cpc	r24, r20
 6e0:	38 f0       	brcs	.+14     	; 0x6f0 <__divsf3_pse+0x26>
 6e2:	9f 5f       	subi	r25, 0xFF	; 255
 6e4:	5f 4f       	sbci	r21, 0xFF	; 255
 6e6:	22 0f       	add	r18, r18
 6e8:	33 1f       	adc	r19, r19
 6ea:	44 1f       	adc	r20, r20
 6ec:	aa 1f       	adc	r26, r26
 6ee:	a9 f3       	breq	.-22     	; 0x6da <__divsf3_pse+0x10>
 6f0:	33 d0       	rcall	.+102    	; 0x758 <__divsf3_pse+0x8e>
 6f2:	0e 2e       	mov	r0, r30
 6f4:	3a f0       	brmi	.+14     	; 0x704 <__divsf3_pse+0x3a>
 6f6:	e0 e8       	ldi	r30, 0x80	; 128
 6f8:	30 d0       	rcall	.+96     	; 0x75a <__divsf3_pse+0x90>
 6fa:	91 50       	subi	r25, 0x01	; 1
 6fc:	50 40       	sbci	r21, 0x00	; 0
 6fe:	e6 95       	lsr	r30
 700:	00 1c       	adc	r0, r0
 702:	ca f7       	brpl	.-14     	; 0x6f6 <__divsf3_pse+0x2c>
 704:	29 d0       	rcall	.+82     	; 0x758 <__divsf3_pse+0x8e>
 706:	fe 2f       	mov	r31, r30
 708:	27 d0       	rcall	.+78     	; 0x758 <__divsf3_pse+0x8e>
 70a:	66 0f       	add	r22, r22
 70c:	77 1f       	adc	r23, r23
 70e:	88 1f       	adc	r24, r24
 710:	bb 1f       	adc	r27, r27
 712:	26 17       	cp	r18, r22
 714:	37 07       	cpc	r19, r23
 716:	48 07       	cpc	r20, r24
 718:	ab 07       	cpc	r26, r27
 71a:	b0 e8       	ldi	r27, 0x80	; 128
 71c:	09 f0       	breq	.+2      	; 0x720 <__divsf3_pse+0x56>
 71e:	bb 0b       	sbc	r27, r27
 720:	80 2d       	mov	r24, r0
 722:	bf 01       	movw	r22, r30
 724:	ff 27       	eor	r31, r31
 726:	93 58       	subi	r25, 0x83	; 131
 728:	5f 4f       	sbci	r21, 0xFF	; 255
 72a:	2a f0       	brmi	.+10     	; 0x736 <__divsf3_pse+0x6c>
 72c:	9e 3f       	cpi	r25, 0xFE	; 254
 72e:	51 05       	cpc	r21, r1
 730:	68 f0       	brcs	.+26     	; 0x74c <__divsf3_pse+0x82>
 732:	8d c0       	rjmp	.+282    	; 0x84e <__fp_inf>
 734:	d7 c0       	rjmp	.+430    	; 0x8e4 <__fp_szero>
 736:	5f 3f       	cpi	r21, 0xFF	; 255
 738:	ec f3       	brlt	.-6      	; 0x734 <__divsf3_pse+0x6a>
 73a:	98 3e       	cpi	r25, 0xE8	; 232
 73c:	dc f3       	brlt	.-10     	; 0x734 <__divsf3_pse+0x6a>
 73e:	86 95       	lsr	r24
 740:	77 95       	ror	r23
 742:	67 95       	ror	r22
 744:	b7 95       	ror	r27
 746:	f7 95       	ror	r31
 748:	9f 5f       	subi	r25, 0xFF	; 255
 74a:	c9 f7       	brne	.-14     	; 0x73e <__divsf3_pse+0x74>
 74c:	88 0f       	add	r24, r24
 74e:	91 1d       	adc	r25, r1
 750:	96 95       	lsr	r25
 752:	87 95       	ror	r24
 754:	97 f9       	bld	r25, 7
 756:	08 95       	ret
 758:	e1 e0       	ldi	r30, 0x01	; 1
 75a:	66 0f       	add	r22, r22
 75c:	77 1f       	adc	r23, r23
 75e:	88 1f       	adc	r24, r24
 760:	bb 1f       	adc	r27, r27
 762:	62 17       	cp	r22, r18
 764:	73 07       	cpc	r23, r19
 766:	84 07       	cpc	r24, r20
 768:	ba 07       	cpc	r27, r26
 76a:	20 f0       	brcs	.+8      	; 0x774 <__divsf3_pse+0xaa>
 76c:	62 1b       	sub	r22, r18
 76e:	73 0b       	sbc	r23, r19
 770:	84 0b       	sbc	r24, r20
 772:	ba 0b       	sbc	r27, r26
 774:	ee 1f       	adc	r30, r30
 776:	88 f7       	brcc	.-30     	; 0x75a <__divsf3_pse+0x90>
 778:	e0 95       	com	r30
 77a:	08 95       	ret

0000077c <__fixunssfsi>:
 77c:	98 d0       	rcall	.+304    	; 0x8ae <__fp_splitA>
 77e:	88 f0       	brcs	.+34     	; 0x7a2 <__fixunssfsi+0x26>
 780:	9f 57       	subi	r25, 0x7F	; 127
 782:	90 f0       	brcs	.+36     	; 0x7a8 <__fixunssfsi+0x2c>
 784:	b9 2f       	mov	r27, r25
 786:	99 27       	eor	r25, r25
 788:	b7 51       	subi	r27, 0x17	; 23
 78a:	a0 f0       	brcs	.+40     	; 0x7b4 <__fixunssfsi+0x38>
 78c:	d1 f0       	breq	.+52     	; 0x7c2 <__fixunssfsi+0x46>
 78e:	66 0f       	add	r22, r22
 790:	77 1f       	adc	r23, r23
 792:	88 1f       	adc	r24, r24
 794:	99 1f       	adc	r25, r25
 796:	1a f0       	brmi	.+6      	; 0x79e <__fixunssfsi+0x22>
 798:	ba 95       	dec	r27
 79a:	c9 f7       	brne	.-14     	; 0x78e <__fixunssfsi+0x12>
 79c:	12 c0       	rjmp	.+36     	; 0x7c2 <__fixunssfsi+0x46>
 79e:	b1 30       	cpi	r27, 0x01	; 1
 7a0:	81 f0       	breq	.+32     	; 0x7c2 <__fixunssfsi+0x46>
 7a2:	9f d0       	rcall	.+318    	; 0x8e2 <__fp_zero>
 7a4:	b1 e0       	ldi	r27, 0x01	; 1
 7a6:	08 95       	ret
 7a8:	9c c0       	rjmp	.+312    	; 0x8e2 <__fp_zero>
 7aa:	67 2f       	mov	r22, r23
 7ac:	78 2f       	mov	r23, r24
 7ae:	88 27       	eor	r24, r24
 7b0:	b8 5f       	subi	r27, 0xF8	; 248
 7b2:	39 f0       	breq	.+14     	; 0x7c2 <__fixunssfsi+0x46>
 7b4:	b9 3f       	cpi	r27, 0xF9	; 249
 7b6:	cc f3       	brlt	.-14     	; 0x7aa <__fixunssfsi+0x2e>
 7b8:	86 95       	lsr	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	b3 95       	inc	r27
 7c0:	d9 f7       	brne	.-10     	; 0x7b8 <__fixunssfsi+0x3c>
 7c2:	3e f4       	brtc	.+14     	; 0x7d2 <__fixunssfsi+0x56>
 7c4:	90 95       	com	r25
 7c6:	80 95       	com	r24
 7c8:	70 95       	com	r23
 7ca:	61 95       	neg	r22
 7cc:	7f 4f       	sbci	r23, 0xFF	; 255
 7ce:	8f 4f       	sbci	r24, 0xFF	; 255
 7d0:	9f 4f       	sbci	r25, 0xFF	; 255
 7d2:	08 95       	ret

000007d4 <__floatunsisf>:
 7d4:	e8 94       	clt
 7d6:	09 c0       	rjmp	.+18     	; 0x7ea <__floatsisf+0x12>

000007d8 <__floatsisf>:
 7d8:	97 fb       	bst	r25, 7
 7da:	3e f4       	brtc	.+14     	; 0x7ea <__floatsisf+0x12>
 7dc:	90 95       	com	r25
 7de:	80 95       	com	r24
 7e0:	70 95       	com	r23
 7e2:	61 95       	neg	r22
 7e4:	7f 4f       	sbci	r23, 0xFF	; 255
 7e6:	8f 4f       	sbci	r24, 0xFF	; 255
 7e8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ea:	99 23       	and	r25, r25
 7ec:	a9 f0       	breq	.+42     	; 0x818 <__floatsisf+0x40>
 7ee:	f9 2f       	mov	r31, r25
 7f0:	96 e9       	ldi	r25, 0x96	; 150
 7f2:	bb 27       	eor	r27, r27
 7f4:	93 95       	inc	r25
 7f6:	f6 95       	lsr	r31
 7f8:	87 95       	ror	r24
 7fa:	77 95       	ror	r23
 7fc:	67 95       	ror	r22
 7fe:	b7 95       	ror	r27
 800:	f1 11       	cpse	r31, r1
 802:	f8 cf       	rjmp	.-16     	; 0x7f4 <__floatsisf+0x1c>
 804:	fa f4       	brpl	.+62     	; 0x844 <__floatsisf+0x6c>
 806:	bb 0f       	add	r27, r27
 808:	11 f4       	brne	.+4      	; 0x80e <__floatsisf+0x36>
 80a:	60 ff       	sbrs	r22, 0
 80c:	1b c0       	rjmp	.+54     	; 0x844 <__floatsisf+0x6c>
 80e:	6f 5f       	subi	r22, 0xFF	; 255
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	16 c0       	rjmp	.+44     	; 0x844 <__floatsisf+0x6c>
 818:	88 23       	and	r24, r24
 81a:	11 f0       	breq	.+4      	; 0x820 <__floatsisf+0x48>
 81c:	96 e9       	ldi	r25, 0x96	; 150
 81e:	11 c0       	rjmp	.+34     	; 0x842 <__floatsisf+0x6a>
 820:	77 23       	and	r23, r23
 822:	21 f0       	breq	.+8      	; 0x82c <__floatsisf+0x54>
 824:	9e e8       	ldi	r25, 0x8E	; 142
 826:	87 2f       	mov	r24, r23
 828:	76 2f       	mov	r23, r22
 82a:	05 c0       	rjmp	.+10     	; 0x836 <__floatsisf+0x5e>
 82c:	66 23       	and	r22, r22
 82e:	71 f0       	breq	.+28     	; 0x84c <__floatsisf+0x74>
 830:	96 e8       	ldi	r25, 0x86	; 134
 832:	86 2f       	mov	r24, r22
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	2a f0       	brmi	.+10     	; 0x844 <__floatsisf+0x6c>
 83a:	9a 95       	dec	r25
 83c:	66 0f       	add	r22, r22
 83e:	77 1f       	adc	r23, r23
 840:	88 1f       	adc	r24, r24
 842:	da f7       	brpl	.-10     	; 0x83a <__floatsisf+0x62>
 844:	88 0f       	add	r24, r24
 846:	96 95       	lsr	r25
 848:	87 95       	ror	r24
 84a:	97 f9       	bld	r25, 7
 84c:	08 95       	ret

0000084e <__fp_inf>:
 84e:	97 f9       	bld	r25, 7
 850:	9f 67       	ori	r25, 0x7F	; 127
 852:	80 e8       	ldi	r24, 0x80	; 128
 854:	70 e0       	ldi	r23, 0x00	; 0
 856:	60 e0       	ldi	r22, 0x00	; 0
 858:	08 95       	ret

0000085a <__fp_nan>:
 85a:	9f ef       	ldi	r25, 0xFF	; 255
 85c:	80 ec       	ldi	r24, 0xC0	; 192
 85e:	08 95       	ret

00000860 <__fp_pscA>:
 860:	00 24       	eor	r0, r0
 862:	0a 94       	dec	r0
 864:	16 16       	cp	r1, r22
 866:	17 06       	cpc	r1, r23
 868:	18 06       	cpc	r1, r24
 86a:	09 06       	cpc	r0, r25
 86c:	08 95       	ret

0000086e <__fp_pscB>:
 86e:	00 24       	eor	r0, r0
 870:	0a 94       	dec	r0
 872:	12 16       	cp	r1, r18
 874:	13 06       	cpc	r1, r19
 876:	14 06       	cpc	r1, r20
 878:	05 06       	cpc	r0, r21
 87a:	08 95       	ret

0000087c <__fp_round>:
 87c:	09 2e       	mov	r0, r25
 87e:	03 94       	inc	r0
 880:	00 0c       	add	r0, r0
 882:	11 f4       	brne	.+4      	; 0x888 <__fp_round+0xc>
 884:	88 23       	and	r24, r24
 886:	52 f0       	brmi	.+20     	; 0x89c <__fp_round+0x20>
 888:	bb 0f       	add	r27, r27
 88a:	40 f4       	brcc	.+16     	; 0x89c <__fp_round+0x20>
 88c:	bf 2b       	or	r27, r31
 88e:	11 f4       	brne	.+4      	; 0x894 <__fp_round+0x18>
 890:	60 ff       	sbrs	r22, 0
 892:	04 c0       	rjmp	.+8      	; 0x89c <__fp_round+0x20>
 894:	6f 5f       	subi	r22, 0xFF	; 255
 896:	7f 4f       	sbci	r23, 0xFF	; 255
 898:	8f 4f       	sbci	r24, 0xFF	; 255
 89a:	9f 4f       	sbci	r25, 0xFF	; 255
 89c:	08 95       	ret

0000089e <__fp_split3>:
 89e:	57 fd       	sbrc	r21, 7
 8a0:	90 58       	subi	r25, 0x80	; 128
 8a2:	44 0f       	add	r20, r20
 8a4:	55 1f       	adc	r21, r21
 8a6:	59 f0       	breq	.+22     	; 0x8be <__fp_splitA+0x10>
 8a8:	5f 3f       	cpi	r21, 0xFF	; 255
 8aa:	71 f0       	breq	.+28     	; 0x8c8 <__fp_splitA+0x1a>
 8ac:	47 95       	ror	r20

000008ae <__fp_splitA>:
 8ae:	88 0f       	add	r24, r24
 8b0:	97 fb       	bst	r25, 7
 8b2:	99 1f       	adc	r25, r25
 8b4:	61 f0       	breq	.+24     	; 0x8ce <__fp_splitA+0x20>
 8b6:	9f 3f       	cpi	r25, 0xFF	; 255
 8b8:	79 f0       	breq	.+30     	; 0x8d8 <__fp_splitA+0x2a>
 8ba:	87 95       	ror	r24
 8bc:	08 95       	ret
 8be:	12 16       	cp	r1, r18
 8c0:	13 06       	cpc	r1, r19
 8c2:	14 06       	cpc	r1, r20
 8c4:	55 1f       	adc	r21, r21
 8c6:	f2 cf       	rjmp	.-28     	; 0x8ac <__fp_split3+0xe>
 8c8:	46 95       	lsr	r20
 8ca:	f1 df       	rcall	.-30     	; 0x8ae <__fp_splitA>
 8cc:	08 c0       	rjmp	.+16     	; 0x8de <__fp_splitA+0x30>
 8ce:	16 16       	cp	r1, r22
 8d0:	17 06       	cpc	r1, r23
 8d2:	18 06       	cpc	r1, r24
 8d4:	99 1f       	adc	r25, r25
 8d6:	f1 cf       	rjmp	.-30     	; 0x8ba <__fp_splitA+0xc>
 8d8:	86 95       	lsr	r24
 8da:	71 05       	cpc	r23, r1
 8dc:	61 05       	cpc	r22, r1
 8de:	08 94       	sec
 8e0:	08 95       	ret

000008e2 <__fp_zero>:
 8e2:	e8 94       	clt

000008e4 <__fp_szero>:
 8e4:	bb 27       	eor	r27, r27
 8e6:	66 27       	eor	r22, r22
 8e8:	77 27       	eor	r23, r23
 8ea:	cb 01       	movw	r24, r22
 8ec:	97 f9       	bld	r25, 7
 8ee:	08 95       	ret

000008f0 <__mulsf3>:
 8f0:	0b d0       	rcall	.+22     	; 0x908 <__mulsf3x>
 8f2:	c4 cf       	rjmp	.-120    	; 0x87c <__fp_round>
 8f4:	b5 df       	rcall	.-150    	; 0x860 <__fp_pscA>
 8f6:	28 f0       	brcs	.+10     	; 0x902 <__mulsf3+0x12>
 8f8:	ba df       	rcall	.-140    	; 0x86e <__fp_pscB>
 8fa:	18 f0       	brcs	.+6      	; 0x902 <__mulsf3+0x12>
 8fc:	95 23       	and	r25, r21
 8fe:	09 f0       	breq	.+2      	; 0x902 <__mulsf3+0x12>
 900:	a6 cf       	rjmp	.-180    	; 0x84e <__fp_inf>
 902:	ab cf       	rjmp	.-170    	; 0x85a <__fp_nan>
 904:	11 24       	eor	r1, r1
 906:	ee cf       	rjmp	.-36     	; 0x8e4 <__fp_szero>

00000908 <__mulsf3x>:
 908:	ca df       	rcall	.-108    	; 0x89e <__fp_split3>
 90a:	a0 f3       	brcs	.-24     	; 0x8f4 <__mulsf3+0x4>

0000090c <__mulsf3_pse>:
 90c:	95 9f       	mul	r25, r21
 90e:	d1 f3       	breq	.-12     	; 0x904 <__mulsf3+0x14>
 910:	95 0f       	add	r25, r21
 912:	50 e0       	ldi	r21, 0x00	; 0
 914:	55 1f       	adc	r21, r21
 916:	62 9f       	mul	r22, r18
 918:	f0 01       	movw	r30, r0
 91a:	72 9f       	mul	r23, r18
 91c:	bb 27       	eor	r27, r27
 91e:	f0 0d       	add	r31, r0
 920:	b1 1d       	adc	r27, r1
 922:	63 9f       	mul	r22, r19
 924:	aa 27       	eor	r26, r26
 926:	f0 0d       	add	r31, r0
 928:	b1 1d       	adc	r27, r1
 92a:	aa 1f       	adc	r26, r26
 92c:	64 9f       	mul	r22, r20
 92e:	66 27       	eor	r22, r22
 930:	b0 0d       	add	r27, r0
 932:	a1 1d       	adc	r26, r1
 934:	66 1f       	adc	r22, r22
 936:	82 9f       	mul	r24, r18
 938:	22 27       	eor	r18, r18
 93a:	b0 0d       	add	r27, r0
 93c:	a1 1d       	adc	r26, r1
 93e:	62 1f       	adc	r22, r18
 940:	73 9f       	mul	r23, r19
 942:	b0 0d       	add	r27, r0
 944:	a1 1d       	adc	r26, r1
 946:	62 1f       	adc	r22, r18
 948:	83 9f       	mul	r24, r19
 94a:	a0 0d       	add	r26, r0
 94c:	61 1d       	adc	r22, r1
 94e:	22 1f       	adc	r18, r18
 950:	74 9f       	mul	r23, r20
 952:	33 27       	eor	r19, r19
 954:	a0 0d       	add	r26, r0
 956:	61 1d       	adc	r22, r1
 958:	23 1f       	adc	r18, r19
 95a:	84 9f       	mul	r24, r20
 95c:	60 0d       	add	r22, r0
 95e:	21 1d       	adc	r18, r1
 960:	82 2f       	mov	r24, r18
 962:	76 2f       	mov	r23, r22
 964:	6a 2f       	mov	r22, r26
 966:	11 24       	eor	r1, r1
 968:	9f 57       	subi	r25, 0x7F	; 127
 96a:	50 40       	sbci	r21, 0x00	; 0
 96c:	8a f0       	brmi	.+34     	; 0x990 <__mulsf3_pse+0x84>
 96e:	e1 f0       	breq	.+56     	; 0x9a8 <__mulsf3_pse+0x9c>
 970:	88 23       	and	r24, r24
 972:	4a f0       	brmi	.+18     	; 0x986 <__mulsf3_pse+0x7a>
 974:	ee 0f       	add	r30, r30
 976:	ff 1f       	adc	r31, r31
 978:	bb 1f       	adc	r27, r27
 97a:	66 1f       	adc	r22, r22
 97c:	77 1f       	adc	r23, r23
 97e:	88 1f       	adc	r24, r24
 980:	91 50       	subi	r25, 0x01	; 1
 982:	50 40       	sbci	r21, 0x00	; 0
 984:	a9 f7       	brne	.-22     	; 0x970 <__mulsf3_pse+0x64>
 986:	9e 3f       	cpi	r25, 0xFE	; 254
 988:	51 05       	cpc	r21, r1
 98a:	70 f0       	brcs	.+28     	; 0x9a8 <__mulsf3_pse+0x9c>
 98c:	60 cf       	rjmp	.-320    	; 0x84e <__fp_inf>
 98e:	aa cf       	rjmp	.-172    	; 0x8e4 <__fp_szero>
 990:	5f 3f       	cpi	r21, 0xFF	; 255
 992:	ec f3       	brlt	.-6      	; 0x98e <__mulsf3_pse+0x82>
 994:	98 3e       	cpi	r25, 0xE8	; 232
 996:	dc f3       	brlt	.-10     	; 0x98e <__mulsf3_pse+0x82>
 998:	86 95       	lsr	r24
 99a:	77 95       	ror	r23
 99c:	67 95       	ror	r22
 99e:	b7 95       	ror	r27
 9a0:	f7 95       	ror	r31
 9a2:	e7 95       	ror	r30
 9a4:	9f 5f       	subi	r25, 0xFF	; 255
 9a6:	c1 f7       	brne	.-16     	; 0x998 <__mulsf3_pse+0x8c>
 9a8:	fe 2b       	or	r31, r30
 9aa:	88 0f       	add	r24, r24
 9ac:	91 1d       	adc	r25, r1
 9ae:	96 95       	lsr	r25
 9b0:	87 95       	ror	r24
 9b2:	97 f9       	bld	r25, 7
 9b4:	08 95       	ret

000009b6 <_exit>:
 9b6:	f8 94       	cli

000009b8 <__stop_program>:
 9b8:	ff cf       	rjmp	.-2      	; 0x9b8 <__stop_program>
